{
	"info": {
		"_postman_id": "ddda617f-f39b-4359-af18-4ece3c21e360",
		"name": "Curso_postman1",
		"description": "Distintos métodos de pruebas usando api de postman echo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13778777"
	},
	"item": [
		{
			"name": "Servicios GET",
			"item": [
				{
					"name": "Get con parametros",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get?param1=hola&param2=adios",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							],
							"query": [
								{
									"key": "param1",
									"value": "hola"
								},
								{
									"key": "param2",
									"value": "adios"
								}
							]
						},
						"description": "Get utilizando parametros"
					},
					"response": [
						{
							"name": "HolaAdios",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://postman-echo.com/get?param1=hola&param2=adios",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"get"
									],
									"query": [
										{
											"key": "param1",
											"value": "hola"
										},
										{
											"key": "param2",
											"value": "adios"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"args\": {\n        \"param1\": \"hola\",\n        \"param2\": \"adios\"\n    },\n    \"headers\": {\n        \"x-forwarded-proto\": \"https\",\n        \"x-forwarded-port\": \"443\",\n        \"host\": \"postman-echo.com\",\n        \"x-amzn-trace-id\": \"Root=1-62e01c97-7cbc48213b11091239b69a11\",\n        \"user-agent\": \"PostmanRuntime/7.29.2\",\n        \"accept\": \"*/*\",\n        \"cache-control\": \"no-cache\",\n        \"postman-token\": \"c565dca1-b578-4f63-954c-3bbba3723574\",\n        \"accept-encoding\": \"gzip, deflate, br\"\n    },\n    \"url\": \"https://postman-echo.com/get?param1=hola&param2=adios\"\n}"
						}
					]
				},
				{
					"name": "Get sin parametros",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get con ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "usuario",
								"value": "Geo",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://postman-echo.com/get?id=1",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET con variables de entorno",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/get",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET con variables globales",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlechoglobal}}/get",
							"host": [
								"{{urlechoglobal}}"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Servicios POST",
			"item": [
				{
					"name": "Post con formulario",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "nombre",
									"value": "Geo",
									"type": "text"
								},
								{
									"key": "apellido",
									"value": "Atavales",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://postman-echo.com/post",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post con RAW",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "Esto es un texto de prueba"
						},
						"url": {
							"raw": "https://postman-echo.com/post",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post con Json",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Geo\",\r\n    \"apellido\": \"Atavales\",\r\n    \"edad\": 31\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://postman-echo.com/post",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post con Array",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"pedido\": 20,\r\n    \"cliente\": \"Geo Atavales\",\r\n    \"productos\": [\r\n        {\r\n            \"id\": 1,\r\n            \"cantidad\": 5\r\n        },\r\n        {\r\n            \"id\": 25,\r\n            \"cantidad\": 1\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://postman-echo.com/post",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Servicios PUT y DELETE",
			"item": [
				{
					"name": "Ejemplo PUT",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 5,\r\n    \"descripcion\": \"Television 55 pulgadas\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://postman-echo.com/put",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"put"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ejemplo DELETE",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://postman-echo.com/delete",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"delete"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Variables Dinámicas",
			"item": [
				{
					"name": "Randomint",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/get?param1={{$randomInt}}",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"get"
							],
							"query": [
								{
									"key": "param1",
									"value": "{{$randomInt}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GUID",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"{{$guid}}\",\r\n    \"nombre\": \"TV\",\r\n    \"cantidad\": \"{{$randomInt}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{urlecho}}/post",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Multiples Variables Dinamicas",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"{{$guid}}\",\r\n    \"nombre\": \"{{$randomAlphaNumeric}}\",\r\n    \"cuenta\": \"{{$randomBankAccount}}\",\r\n    \"cantidad\": {{$randomInt}},\r\n    \"fecha\": {{$timestamp}},\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"nombrereal2\": \"{{$randomFirstName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{urlecho}}/post",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Metodos de autentificacion",
			"item": [
				{
					"name": "Basic Auth",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "postman",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/basic-auth",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"basic-auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bearer con Token",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "geo84687",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlhttpbin}}/bearer",
							"host": [
								"{{urlhttpbin}}"
							],
							"path": [
								"bearer"
							]
						}
					},
					"response": []
				},
				{
					"name": "OAuhth1",
					"request": {
						"auth": {
							"type": "oauth1",
							"oauth1": [
								{
									"key": "consumerSecret",
									"value": "D+EdQ-gs$-%@2Nu7",
									"type": "string"
								},
								{
									"key": "consumerKey",
									"value": "RKCGzna7bv9YD57c",
									"type": "string"
								},
								{
									"key": "signatureMethod",
									"value": "HMAC-SHA1",
									"type": "string"
								},
								{
									"key": "version",
									"value": "1.0",
									"type": "string"
								},
								{
									"key": "addParamsToHeader",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "addEmptyParamsToSign",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/oauth1",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"oauth1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Hawk auth",
					"request": {
						"auth": {
							"type": "hawk",
							"hawk": [
								{
									"key": "authKey",
									"value": "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn",
									"type": "string"
								},
								{
									"key": "authId",
									"value": "dh37fgj492je",
									"type": "string"
								},
								{
									"key": "algorithm",
									"value": "sha256",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/auth/hawk",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"auth",
								"hawk"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Utilidades",
			"item": [
				{
					"name": "Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/status/500",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"status",
								"500"
							]
						}
					},
					"response": []
				},
				{
					"name": "Status con parametos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/status/:id",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"status",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "200"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Stream",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/stream/5",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"stream",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delay",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/delay/4",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"delay",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "UTF8",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/encoding/utf8",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"encoding",
								"utf8"
							]
						}
					},
					"response": []
				},
				{
					"name": "IP",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/ip",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"ip"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Utilidades de fecha y hora",
			"item": [
				{
					"name": "Now",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/time/now",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"time",
								"now"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fecha Correcta",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/time/valid?timestamp=2022-07-35",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"time",
								"valid"
							],
							"query": [
								{
									"key": "timestamp",
									"value": "2022-07-35"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Dia Semana",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/time/unit?timestamp=2022-07-26&unit=month",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"time",
								"unit"
							],
							"query": [
								{
									"key": "timestamp",
									"value": "2022-07-26"
								},
								{
									"key": "unit",
									"value": "month"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sumar Tiempo",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/time/add?timestamp=2022-07-26 10:00:00&hours=20",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"time",
								"add"
							],
							"query": [
								{
									"key": "timestamp",
									"value": "2022-07-26 10:00:00"
								},
								{
									"key": "hours",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Restar Tiempo",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/time/subtract?timestamp=2022-07-26 10:00:00&hours=20",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"time",
								"subtract"
							],
							"query": [
								{
									"key": "timestamp",
									"value": "2022-07-26 10:00:00"
								},
								{
									"key": "hours",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Start",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/time/start?timestamp=2022-07-26&unit=month",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"time",
								"start"
							],
							"query": [
								{
									"key": "timestamp",
									"value": "2022-07-26"
								},
								{
									"key": "unit",
									"value": "month"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Partir fecha y hora",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/time/object?timestamp=2022-07-26 20:50:00",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"time",
								"object"
							],
							"query": [
								{
									"key": "timestamp",
									"value": "2022-07-26 20:50:00"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Anterior",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/time/before?timestamp=2022-07-26&target=2022-07-27",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"time",
								"before"
							],
							"query": [
								{
									"key": "timestamp",
									"value": "2022-07-26"
								},
								{
									"key": "target",
									"value": "2022-07-27"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Posterior",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/time/after?timestamp=2022-07-26&target=2022-07-27",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"time",
								"after"
							],
							"query": [
								{
									"key": "timestamp",
									"value": "2022-07-26"
								},
								{
									"key": "target",
									"value": "2022-07-27"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Entre",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/time/between?timestamp=2022-07-26&start=2022-07-25&end=2022-07-28",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"time",
								"between"
							],
							"query": [
								{
									"key": "timestamp",
									"value": "2022-07-26"
								},
								{
									"key": "start",
									"value": "2022-07-25"
								},
								{
									"key": "end",
									"value": "2022-07-28"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Bisiesto",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/time/leap?timestamp=2020-07-26",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"time",
								"leap"
							],
							"query": [
								{
									"key": "timestamp",
									"value": "2020-07-26"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cookies",
			"item": [
				{
					"name": "Obtener cookies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/cookies",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"cookies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Añadir Cookies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/cookies/set?param1=geo&param2=atavales",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"cookies",
								"set"
							],
							"query": [
								{
									"key": "param1",
									"value": "geo"
								},
								{
									"key": "param2",
									"value": "atavales"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Borrar Cokkies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/cookies/delete?param1",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"cookies",
								"delete"
							],
							"query": [
								{
									"key": "param1",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Pruebas",
			"item": [
				{
					"name": "Status Code 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test que comprueba llamada correcta\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/get",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "Json Value Check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData;\r",
									"\r",
									"pm.test(\"Resultados del Json\", function () {\r",
									"    jsonData = pm.response.json();\r",
									"    console.log(jsonData);\r",
									"    pm.expect(jsonData.url).to.eql(\"https://postman-echo.com/post\");\r",
									"    pm.expect(jsonData.data.nombre).to.eql(\"Geo\");\r",
									"    pm.expect(jsonData.data.apellido).to.eql(\"Atavales\");\r",
									"});\r",
									"\r",
									"pm.test(\"Resultados2 del Json\", function () {\r",
									"    jsonData = pm.response.json();\r",
									"    console.log(jsonData);\r",
									"    pm.expect(jsonData.json.edad).to.eql(31);\r",
									"});\r",
									"\r",
									"pm.test(\"Codigo 200!!\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Geo\",\r\n    \"apellido\": \"Atavales\",\r\n    \"edad\": 31\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://postman-echo.com/post",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Response Time & Equal to a String & Header Check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Respuesta menor a 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"pm.test(\"El cuerpo de la respuesta es\", function () {\r",
									"    pm.response.to.have.body('{\"delay\":\"2\"}');\r",
									"});\r",
									"\r",
									"pm.test(\"Date is present\", function () {\r",
									"    pm.response.to.have.header(\"Date\");\r",
									"});\r",
									"\r",
									"pm.test(\"Tiene cadena OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/delay/2",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"delay",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Contains String",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"deflate\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "Code Name Has a String & Successful POST Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Si aparece la palabra Accepted\", function () {\r",
									"    pm.response.to.have.status(\"Accepted\");\r",
									"});\r",
									"\r",
									"pm.test(\"El codigo aparece en la lista\", function() {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200])\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlecho}}/status/202",
							"host": [
								"{{urlecho}}"
							],
							"path": [
								"status",
								"202"
							]
						}
					},
					"response": []
				},
				{
					"name": "Chai Assertion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData;\r",
									"\r",
									"pm.test(\"Recibo cadena en el campo nombre\", function () {\r",
									"    jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.json.nombre).to.be.a('string');\r",
									"    pm.expect(jsonData.json.edad).to.be.a('number');\r",
									"    pm.expect(jsonData.json.edad).to.not.be.a('string');\r",
									"    pm.expect(jsonData).to.have.a.property('args')\r",
									"    pm.expect(jsonData.json.nombre).to.include('eo');\r",
									"    pm.expect(true).to.be.true;\r",
									"    pm.expect([1, 2, 3]).to.include.members([1, 3]);\r",
									"    pm.expect(jsonData.args).to.be.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"Más tests\", function () {\r",
									"    pm.expect(jsonData.json.nombre).to.have.lengthOf(3);\r",
									"    pm.expect(jsonData.json.nombre).to.have.lengthOf.above(2);\r",
									"    pm.expect(jsonData.json.nombre).to.have.lengthOf.below(4);\r",
									"    pm.expect(jsonData.json.nombre).to.have.lengthOf.within(3,20);\r",
									"    pm.expect(jsonData.json.nombre).to.match(/^Ge/);\r",
									"    pm.expect(jsonData.json.nombre).to.match(/o/);\r",
									"    pm.expect(jsonData.json.nombre).to.not.match(/i/);\r",
									"    pm.expect(jsonData.json.edad).to.be.closeTo(30,5);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Geo\",\r\n    \"apellido\": \"Atavales\",\r\n    \"edad\": 31\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://postman-echo.com/post",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Xml Test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonObject = xml2Json(responseBody);\r",
									"console.log(jsonObject);\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(jsonObject.slideshow.$.title).to.eql(\"Sample Slide Show\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlhttpbin}}/xml",
							"host": [
								"{{urlhttpbin}}"
							],
							"path": [
								"xml"
							]
						}
					},
					"response": []
				},
				{
					"name": "TXT Test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"deny\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlhttpbin}}/robots.txt",
							"host": [
								"{{urlhttpbin}}"
							],
							"path": [
								"robots.txt"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}